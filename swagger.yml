swagger: 2.0
info:
  title: Complete API Collection
  description: >
    Collection for managing users, financial advisors, products, categories,
    appointments, and authentication.
  version: 1.0.0
servers:
  - url: http://localhost:5000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Authentication
  - name: Users
  - name: Financial Advisors
  - name: Products
  - name: Categories
  - name: Appointments
  - name: parentCategory
  - name: Meetings
paths:
  /api/auth/signup:
    post:
      tags:
        - Authentication
      summary: Signup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users:
    get:
      tags:
        - Users
      summary: Get All Users
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Users
      summary: Create User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/{id}:
    get:
      tags:
        - Users
      summary: Get User By ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Users
      summary: Update User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Users
      summary: Delete User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/financialAdvisors:
    get:
      tags:
        - Financial Advisors
      summary: Get All Financial Advisors
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Financial Advisors
      summary: Create Financial Advisor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                phoneNumber:
                  type: string
                address:
                  type: string
                specialization:
                  type: string
                experience:
                  type: string
                feePerConsultation:
                  type: number
                timings:
                  type: array
                  items:
                    type: string
                status:
                  type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/financialAdvisors/{id}:
    get:
      tags:
        - Financial Advisors
      summary: Get Financial Advisor By ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Financial Advisors
      summary: Update Financial Advisor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                specialization:
                  type: string
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Financial Advisors
      summary: Delete Financial Advisor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/products:
    get:
      tags:
        - Products
      summary: Get All Products
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Products
      summary: Create Product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                category:
                  type: string
                subCategory:
                  type: string
                details:
                  type: string
                keywords:
                  type: array
                  items:
                    type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/products/{id}:
    get:
      tags:
        - Products
      summary: Get Product By ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Products
      summary: Update Product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Products
      summary: Delete Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/categories:
    get:
      tags:
        - Categories
      summary: Get All Categories
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Categories
      summary: Create Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parentCategory:
                  type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/categories/{id}:
    get:
      tags:
        - Categories
      summary: Get Category By ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Categories
      summary: Update Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Categories
      summary: Delete Category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/appointments:
    get:
      tags:
        - Appointments
      summary: Get All Appointments
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Appointments
      summary: Create Appointment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                productId:
                  type: string
                financialAdvisorId:
                  type: string
                dateTime:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/appointments/{id}:
    get:
      tags:
        - Appointments
      summary: Get Appointment By ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Appointments
      summary: Update Appointment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dateTime:
                  type: string
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Appointments
      summary: Delete Appointment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
